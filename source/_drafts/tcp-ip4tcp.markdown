---
layout: post
title: "TCP/IP详解阅读笔记4：TCP拥塞控制"
---

TCP流量控制(flow control)提供了一种避免接受方跟不上发送方发送速度的机制。但是互联网环境非常复杂，网络负载过重时就会出现丢包问题。路由器在处理超住自己处理能力，即自身缓冲区已满时的包的时候，会将包简单抛弃。这种情况称为拥塞(congested)。拥塞会对TCP协议造成影响。例如，如果TCP协议在通信时，如果网络出现拥塞，那么可能无法接收到ACK，然后TCP协议重新发送该包，导致拥塞现象加重，严重影响网络通信。因此，TCP需要一种能够察觉网络拥塞，避免加剧网络拥塞，并在网络拥塞恢复之后重新提升传输速度的机制，称为TCP拥塞控制(congestion control)。

# 拥塞检测

TCP需要在拥塞发生的时候减慢自己的传输速度，但是它首先需要有一种方法检测到拥塞的发生。传统的TCP协议并没有显示检测拥塞发生的信号。因此，TCP在检测到一个或者多个包丢失时就会假定拥塞已经发生，这时TCP就会减慢发送的速度。

# 减慢TCP的发送速度

TCP拥塞控制用来减慢TCP连接的速度方法还是跟TCP流浪控制使用的方法一样，即窗口(window)。TCP头中有一个窗口大小(Window Size)域用来控制传输速度，这个域用于给TCP连接的另一头推荐一个它能接受的窗口大小。现在TCP又有了一个考虑窗口大小的参考因素，及阻塞控制窗口(congestion window)。窗口的大小取的是推荐大小以及阻塞窗口大小的最小值。

```
W = min(awnd, cwnd)
```

上式中，W是发送窗口的大小，awnd是接受方推荐的窗口大小(Advertised Window Size)，cwnd是阻塞窗口大小(Congestion Window Size)。遗憾的是cwnd的值并不是直接提供给发送方的，我们需要一种有效的方式来动态的确定它。而且我们需要精确的控制W的值，不能让他太大后者太小。我们应该把它设置为带宽时延积(BDP, bandwidth-delay product)。BDP又称做最优窗口大小，是能储存在网络传输中数据的量，它等于RTT乘以网络路径中速度最低一环的速度的乘积，说白了就是还在传输路上的数据的大小。事实上，为了充分利用网络带宽，W的值至少因该比BDP大，但是如果BDP过于大又会造成延迟过高的问题。再网络中，确定BDP是一件很复杂的事情。

# 经典算法


